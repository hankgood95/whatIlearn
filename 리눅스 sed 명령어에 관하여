리눅스에서 우리가 파일의 편집 해야할 일이 생긴다.
보통은 vi를 이용하여서 편집을 한다. 하지만 간단하게 특정 파일명만 바꾼다거나 아니면 특정 변수의 내용만 빠르게 바꿔야할 일이 있을때는
vi를 사용한다면 매우 번거러울 것이다. 일일이 vi를 통해서 들어가야만 하기 때문이다.
그럴때 사용하면 좋은 명령어가 sed 명령어이다.

sed 옵션들

-n : 출력을 생략하는 옵션, 따라서 이 옵션을 사용하고 출력을 하고 싶다면 그 안에 따로 /p 옵션을 사용해야함
ex)
sed -n '2p' input.txt

-e : 다중으로 편집을 가능하게 해준다.
ex)
sed -e 's/foo/bar/' -e 's/baz/qux/' input.txt

-f : sed를 스크립트파일로 만든것을 이용해서 sed를 진행한다.
ex)
sed -f script.sed input.txt

-i : 파일을 직접 수정한다.
ex)
sed -i 's/foo/bar/' input.txt
이렇게 하면 input.txt 파일에 있는 foo를 bar로 수정을 하고 input.txt를 저장한다는 뜻이다.

-r : 정규표현식을 사용하여서 수정한다.
ex)
sed -r 's/(\d+)-(\d+)/\2-\1/' input.txt
결과
123-456
789-321
->
456-123
321-789

-s : 여러파일들을 한번에 편집한다.
ex)
sed -s 's/foo/bar/' file1.txt file2.txt

위 옵션들을 봤으니 이제 안에 명령문으로 어떤걸 쓸수있는지 알아보자.


sed 명령어

s : 특정 패턴의 문자열을 다른 문자열로 치환해준다.
ex)
sed 's/foo/bar/' input.txt
input.txt 파일에서 foo 로 되어 있는것을 bar로 치환해준다.

d : 특정 패턴이 있는 문자열을 삭제한다.
ex)
sed '/pattern/d' input.txt

p : 특정 패턴이 있는 문자열을 출력하거나 특정 줄을 출력한다.
ex)
sed -n '2,4p' input.txt

a : 특정 줄이나 패턴뒤에 지정된 텍스트를 추가한다.
ex)
sed '/pattern/a\This is additional text.' input.txt

i : 특정 패턴앞에 문자열을 삽입한다.
ex)
sed '/pattern/i\This line is inserted.' input.txt

r : 읽어들인 파일의 내용을 특정 문자열 뒤에 삽입한다.
ex)
sed '/pattern/r file.txt' input.txt

